source('~/GitHub/CASPIAN/CASPIAN/R/new_try.R')
source('~/GitHub/CASPIAN/CASPIAN/R/new_try.R')
source('~/GitHub/CASPIAN/CASPIAN/R/new_try.R')
source('~/GitHub/CASPIAN/CASPIAN/R/new_try.R')
source('~/GitHub/CASPIAN/CASPIAN/R/new_try.R')
source('~/GitHub/CASPIAN/CASPIAN/R/new_try.R')
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(outputCASPIAN[10],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
plotResults(outputCASPIAN[10],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
i
plotResults(list_results = outputCASPIAN[10],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
list_results = outputCASPIAN[10]
variable="Pinv"
save_plot = F
shapeObj = init_obj$water_shp
length(list_results)
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
i<-1
shapeObj@data <- copy(list_results[[i]])
colNum<-which(colnames(shapeObj@data)==variable)
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
newData<-as.data.table(do.call(rbind,CombList))
setkey(newData,Order)
shapeObj@data<-newData
newData
shapeObj@data$norm <- as.character(round(shapeObj@data[,colNum],num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
shapeObj@data<-as.data.table(shapeObj@data)
setkey(shapeObj@data,Order)
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
shapeObj@data<-as.data.frame(newData)
# get color palette here
shapeObj@data$norm <- as.character(round(shapeObj@data[,colNum],num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
shapeObj@data<-as.data.table(shapeObj@data)
setkey(shapeObj@data,Order)
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
plot(border_dataset2)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),
add=T)
#  plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(outputCASPIAN[10],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
plotResults(outputCASPIAN[1],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
list_results = outputCASPIAN[66]
variable="Pinv"
save_plot = F
shapeObj = init_obj$water_shp
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
i
i<-1
length(list_results)
shapeObj@data <- copy(list_results[[i]])
colNum<-which(colnames(shapeObj@data)==variable)
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
newData<-as.data.table(do.call(rbind,CombList))
setkey(newData,Order)
shapeObj@data<-as.data.frame(newData)
shapeObj@data$norm <- as.character(round(shapeObj@data[,colNum],num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
shapeObj@data<-as.data.table(shapeObj@data)
setkey(shapeObj@data,Order)
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
x11(width=10,height = 10)
layout(matrix(1:2,nrow=1),widths=c(0.2,0.8))
# legend part
op <- par(mar=c(0.1,0.1,0.1,0.5))
num_legend<-40
color_legend <- rev(c(#"black",
"darkgray", colfunc(num_legend)))
xl <- 1
yb <- 1
xr <- 1.5
yt <- 2
plot(NA,type="n",ann=FALSE,xlim=c(0,1.7),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/(num_legend+1)),-1),
xr,
tail(seq(yb,yt,(yt-yb)/(num_legend+1)),-1),
col= color_legend,
border = color_legend
)
text(x=c(xl-0.1), y = seq(yt,yb,length.out = c(num_legend+1))[c(1,seq(2,c(num_legend+1),length.out = 11))],adj = 1,
labels = c("Prob = 0",paste(variable, "=",seq(0,1,by=0.1),sep=" ")),cex=.9)
# mtext(
#actual map plotting
op <- par(mar=c(0.1,0.2,0.1,0.2))
#  border_dataset2<-readOGR(dsn="C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV/gadm36_DEU_shp",layer="gadm36_DEU_0")
#  plot(border_dataset2)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),
add=T)
#  plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
# for (j in init_nodes) points(subset(node_shp_sub,Knoten_Num%in%j),pch=1,cex=1,col="darkgrey",lwd=2)
# mtext(t,side=3,line=-2)
legend("topleft",c(paste0("Iter. #",names(list_results)[i])),box.col = "white",bg = "white")
x11(width=10,height = 10)
layout(matrix(1:2,nrow=1),widths=c(0.2,0.8))
# legend part
op <- par(mar=c(0.1,0.1,0.1,0.5))
num_legend<-40
color_legend <- rev(c(#"black",
"darkgray", colfunc(num_legend)))
xl <- 1
yb <- 1
xr <- 1.5
yt <- 2
plot(NA,type="n",ann=FALSE,xlim=c(0,1.7),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/(num_legend+1)),-1),
xr,
tail(seq(yb,yt,(yt-yb)/(num_legend+1)),-1),
col= color_legend,
border = color_legend
)
text(x=c(xl-0.1), y = seq(yt,yb,length.out = c(num_legend+1))[c(1,seq(2,c(num_legend+1),length.out = 11))],adj = 1,
labels = c("Prob = 0",paste(variable, "=",seq(0,1,by=0.1),sep=" ")),cex=.9)
# mtext(
#   paste("Pinv =",seq(1,0,by=-0.1),sep=" "),
#   side=2,at= c(seq(yb,yt,(yt-yb)/(num_legend+1))[seq(1,(num_legend+1),by=c(num_legend/10))]),
#   las=2,cex=0.7)
# frame()
#actual map plotting
op <- par(mar=c(0.1,0.2,0.1,0.2))
#  border_dataset2<-readOGR(dsn="C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV/gadm36_DEU_shp",layer="gadm36_DEU_0")
#  plot(border_dataset2)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),
add=T)
#  plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
Inv
#  border_dataset2<-readOGR(dsn="C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV/gadm36_DEU_shp",layer="gadm36_DEU_0")
#  plot(border_dataset2)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),
add=T)
op <- par(mar=c(0.1,0.2,0.1,0.2))
border_dataset2<-readOGR(dsn="C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV/gadm36_DEU_shp",layer="gadm36_DEU_0")
plot(border_dataset2)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),
add=T)
#  plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]),
add=T)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]))
#  plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
# for (j in init_nodes) points(subset(node_shp_sub,Knoten_Num%in%j),pch=1,cex=1,col="darkgrey",lwd=2)
# mtext(t,side=3,line=-2)
legend("topleft",c(paste0("Iter. #",names(list_results)[i])),box.col = "white",bg = "white")
#    plot(border_dataset,axes=F,add=T, border="black")
layout(matrix(1:2,nrow=1),widths=c(0.2,0.8))
# legend part
op <- par(mar=c(0.1,0.1,0.1,0.5))
num_legend<-40
color_legend <- rev(c(#"black",
"darkgray", colfunc(num_legend)))
xl <- 1
yb <- 1
xr <- 1.5
yt <- 2
plot(NA,type="n",ann=FALSE,xlim=c(0,1.7),ylim=c(1,2),xaxt="n",yaxt="n",bty="n")
rect(
xl,
head(seq(yb,yt,(yt-yb)/(num_legend+1)),-1),
xr,
tail(seq(yb,yt,(yt-yb)/(num_legend+1)),-1),
col= color_legend,
border = color_legend
)
text(x=c(xl-0.1), y = seq(yt,yb,length.out = c(num_legend+1))[c(1,seq(2,c(num_legend+1),length.out = 11))],adj = 1,
labels = c("Prob = 0",paste(variable, "=",seq(0,1,by=0.1),sep=" ")),cex=.9)
# mtext(
#   paste("Pinv =",seq(1,0,by=-0.1),sep=" "),
#   side=2,at= c(seq(yb,yt,(yt-yb)/(num_legend+1))[seq(1,(num_legend+1),by=c(num_legend/10))]),
#   las=2,cex=0.7)
# frame()
#actual map plotting
op <- par(mar=c(0.1,0.2,0.1,0.2))
# border_dataset2<-readOGR(dsn="C:/Users/mbagnara/Dropbox/AlienSpeciesSpread/Data/TestDataRoad/20180314_Verkehrsbelastungen2015_DTV/gadm36_DEU_shp",layer="gadm36_DEU_0")
#  plot(border_dataset2)
plot(Not_inv,xlim=c(xmin(shapeObj),xmax(shapeObj)),ylim=c(ymin(shapeObj),ymax(shapeObj)),
axes=F,col="darkgray",
panel.first=rect(par("usr")[1],par("usr")[3],par("usr")[2],par("usr")[4]))
#  plot(Not_inv,add=T,col="darkgray")
plot(Inv,add=T,col=Inv@data$color)
# for (j in init_nodes) points(subset(node_shp_sub,Knoten_Num%in%j),pch=1,cex=1,col="darkgrey",lwd=2)
# mtext(t,side=3,line=-2)
legend("topleft",c(paste0("Iter. #",names(list_results)[i])),box.col = "white",bg = "white")
#    plot(border_d
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(outputCASPIAN[10],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
plotResults(outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
library(CASPIAN)
library(CASPIAN)
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
outputCASPIAN[66]
init_obj$water_shp
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
library(CASPIAN)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
library(CASPIAN)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
shapeObj@data$norm
shapeObj@data$norm
list_results = outputCASPIAN[66]
variable="Pinv"
save_plot = F
shapeObj = init_obj$water_shp
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
#plotting
for (i in 1:length(list_results)){
cat("\n Creating map",i,"out of", length(list_results),"\n")
time_plot<-proc.time()
shapeObj@data <- copy(list_results[[i]])
colNum<-which(colnames(shapeObj@data)==variable)
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,shp=shapeObj@data,alr=already,variable=variable)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
newData<-as.data.table(do.call(rbind,CombList))
setkey(newData,Order)
shapeObj@data<-as.data.frame(newData)
# get color palette here
shapeObj@data$norm <- as.character(round(shapeObj@data[,colNum],num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
shapeObj@data<-as.data.table(shapeObj@data)
setkey(shapeObj@data,Order)
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
i<-1
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
shapeObj@data <- copy(list_results[[i]])
colNum<-which(colnames(shapeObj@data)==variable)
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,shp=shapeObj@data,alr=already,variable=variable)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
newData<-as.data.table(do.call(rbind,CombList))
setkey(newData,Order)
shapeObj@data<-as.data.frame(newData)
# get color palette here
shapeObj@data$norm <- as.character(round(shapeObj@data[,colNum],num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
shapeObj@data<-as.data.table(shapeObj@data)
setkey(shapeObj@data,Order)
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
shapeObj@data
shapeObj@data$norm
shapeObj[shapeObj@data$norm>0,]
str(shapeObj)
class(shapeObj)
plot(shapeObj)
Inv<-shapeObj[shapeObj@data$norm>0]
Inv<-shapeObj[shapeObj@data$norm>0,]
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
library(CASPIAN)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
list_results = outputCASPIAN[66]
variable="Pinv"
shapeObj = init_obj$water_shp
save_plot = F
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
1:length(list_results)
i<-1
shapeObj@data <- copy(list_results[[i]])
colNum<-which(colnames(shapeObj@data)==variable)
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already)
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,...)
"lapply"
?lapply
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
newData<-as.data.table(do.call(rbind,CombList))
newData
length(CombList)
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
length(CombList)
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
length(CombList)
sys.frame()
sys.frame(-1)
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
print( sys.frame())
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
length(CombList)
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already,shp=shapeObj@data,var=variable)
already
source('~/GitHub/CASPIAN/CASPIAN/R/combID.R')
# Combine probabilities of invasion in both directions
already<-c()
CombList<-lapply(shapeObj@data$ID, combID,alr=already, shp=shapeObj@data, var=variable)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
length(CombList)
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
source('~/GitHub/CASPIAN/CASPIAN/R/plotResults.R')
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
library(CASPIAN)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
library(CASPIAN)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
library(CASPIAN)
rm(list=ls())
load("~/../Desktop/Corbicula/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
load("~/../Desktop/Senecio2nd_UnifPrior_NoPallets_FINAL/CalibrationResults.rData")
list_results<-outputCASPIAN[1]
shapeObj<-init_obj$roads_shp
save_ploy<-FALSE
save_plot<-FALSE
variable="Pinv"
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
library(CASPIAN)
num_col<-5
#create palette
norm<-as.character(seq(0,1,length.out=c(10^num_col+1)))
colfunc <- colorRampPalette(c("green3","gold","darkorange","red3","darkred"))
color<-colfunc(10^num_col+1)
pal<-data.table(norm=norm,color=color)
pal$color<-as.character(pal$color)
i<-1
shapeObj@data <- copy(list_results[[i]])
colNum<-which(colnames(shapeObj@data)==variable)
# Combine probabilities of invasion in both directions
assign(x="already",value=c(),envir=.GlobalEnv)
CombList<-lapply(shapeObshapeObjj@data$ID, combID,alr=already, shp=shapeObj@data, var=variable)
# Combine probabilities of invasion in both directions
assign(x="already",value=c(),envir=.GlobalEnv)
CombList<-lapply(shapeObj@data$ID, combID,alr=already, shp=shapeObj@data, var=variable)
length(CombList)
CombList<-CombList[!vapply(CombList, is.null, logical(1))]
length(CombList)
shapeObj@data<-as.data.table(do.call(rbind,CombList))
setkey(shapeObj@data,Order)
shapeObj@data<-as.data.frame(shapeObj@data)
rm("already",envir = .GlobalEnv)
# get color palette here
shapeObj@data$norm <- as.character(round(shapeObj@data[,colNum],num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
shapeObj@data<-as.data.table(shapeObj@data)
setkey(shapeObj@data,Order)
Inv<-shapeObj[shapeObj@data$norm>0,]
Not_inv<-shapeObj[shapeObj@data$norm==0,]
shapeObj@data
shapeObj@data<-as.data.table(do.call(rbind,CombList))
setkey(shapeObj@data,Order)
# get color palette here
shapeObj@data$norm <- as.character(round(shapeObj@data[,colNum],num_col))
as.character(round(shapeObj@data[,get(variable)],num_col))
# get color palette here
shapeObj@data$norm <- as.character(round(shapeObj@data[,get(variable)],num_col))
shapeObj@data<-merge(shapeObj@data,pal,by="norm",all.x=TRUE,sort=FALSE)
#isolating segments where species has been introduced, not introduced, or has invaded
shapeObj@data$norm<-as.numeric(shapeObj@data$norm)
#shapeObj@data<-as.data.table(shapeObj@data)
setkey(shapeObj@data,Order)
Inv<-shapeObj[shapeObj@data$norm>0,]
shapeObj@data<-as.data.frame(shapeObj@data)
Inv<-shapeObj[shapeObj@data$norm>0,]
shapeObj@data<-as.data.table(shapeObj@data)
rm(list=ls())
load("~/../Desktop/Senecio2nd_UnifPrior_NoPallets_FINAL/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[66],variable="Pinv",save_plot = F,shapeObj = init_obj$water_shp)
rm(list=ls())
load("~/../Desktop/Senecio2nd_UnifPrior_NoPallets_FINAL/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[1],variable="Pinv",save_plot = F,shapeObj = init_obj$roads_shp)
cat ("/n", which(shp$ID==x), " out of ", length(shp$ID),"/n")
cat ("/n mamma")
cat ("\n mamma")
rm(list=ls())
load("~/../Desktop/Senecio2nd_UnifPrior_NoPallets_FINAL/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[1],variable="Pinv",save_plot = F,shapeObj = init_obj$roads_shp)
nrow(outputCASPIAN[[1]])
nrow(init_obj$roads_shp@data)
rm(list=ls())
load("~/../Desktop/Senecio2nd_UnifPrior_NoPallets_FINAL/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[1],variable="Pinv",save_plot = F,shapeObj = init_obj$roads_shp)
rm(list=ls())
load("~/../Desktop/Senecio2nd_UnifPrior_NoPallets_FINAL/CalibrationResults.rData")
plotResults(list_results = outputCASPIAN[1],variable="Pinv",save_plot = F,shapeObj = init_obj$roads_shp)
35285/60
35285/60/60
